#image: agoradigital/r-scrapper-cicd:latest
image: docker:latest

services:
  - docker:dind

stages:
  - build
  - test
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375/
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:gitlab-ci-dev	
  COMPOSE_CMD: docker-compose -f docker-compose.yml
  
before_script:
  - apk add --no-cache docker-compose
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - export PKG_IMAGE_TAG=$CONTAINER_TEST_IMAGE

build:
  stage: build
  script:
    - $COMPOSE_CMD pull || true
    - $COMPOSE_CMD build
    - $COMPOSE_CMD push

tests:
  stage: test
  script:
    - $COMPOSE_CMD pull
    - $COMPOSE_CMD run rmod sh -c 'Rscript -e "tryCatch(stopifnot(length(devtools::check(check_dir = \".\", args = c(\"--no-examples\", \"--as-cran\", \"--no-manual\", \"--no-tests\"))$errors) == 0),error = function(error_message) {print(paste(\"Exception when checking code:\",error_message))})"'
    - $COMPOSE_CMD run rmod sh -c 'Rscript -e "devtools::test()"'
    - $COMPOSE_CMD run -e CODECOV_TOKEN=$CODECOV_TOKEN rmod sh -c 'Rscript -e "library(covr);codecov()"'

pages:
  stage: deploy
  script:
    - $COMPOSE_CMD pull
    - $COMPOSE_CMD run rmod sh -c 'Rscript -e "install.packages(\"pkgdown\"); devtools::document(); pkgdown::build_site(override = list(destination = \"public\"))"; mv docs public/'
    - $COMPOSE_CMD push
