#image: agoradigital/r-scrapper-cicd:latest

services:
  - docker:dind

stages:
  - build
  - test
  - deploy

variables:
  _R_CHECK_CRAN_INCOMING_: "false"
  _R_CHECK_FORCE_SUGGESTS_: "true"
  APT_PKGS: "libcurl4-openssl-dev libssh2-1-dev libssl-dev libxml2-dev zlib1g-dev git"
  DOCKER_HOST: tcp://docker:2375/
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:gitlab-ci-dev	
  COMPOSE_CMD: docker-compose -f docker-compose.yml
  

cache:
  paths:
    - cache/

before_script:
  - mkdir -p cache
  - echo cache >>.Rbuildignore
  #- apt-get update
  #- apt-get install -y --no-install-recommends ${APT_PKGS}
  #- apt-get install -y --no-install-recommends qpdf pandoc pandoc-citeproc
  #- export PATH="/usr/local/lib/R/site-library/littler/examples/:${PATH}"
  #- echo "options(Ncpus = $(nproc --all))" >> /usr/local/lib/R/etc/Rprofile.site
  - echo ".libPaths(\"$PWD/cache\")" >> /usr/local/lib/R/etc/Rprofile.site
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - export PKG_IMAGE_TAG=$CONTAINER_TEST_IMAGE

build:
  stage: build
  script:
    - $COMPOSE_CMD pull || true
    - $COMPOSE_CMD build
    - $COMPOSE_CMD push

tests:
  stage: test
  script:
    - $COMPOSE_CMD pull
    - $COMPOSE_CMD run api sh -c 'Rscript -e "tryCatch(stopifnot(length(devtools::check(check_dir = '.', args = c('--no-examples', '--as-cran', '--no-manual', '--no-tests'))$errors) == 0),error = function(error_message) {print(paste('Exception when checking code:',error_message))})"'
    - $COMPOSE_CMD run api sh -c 'Rscript -e "res=devtools::test(reporter='summary');df=as.data.frame(res);if(sum(df$failed) > 0 || any(df$error)) {q(status=1)}"'
    - $COMPOSE_CMD run api sh -c 'Rscript -e "library(covr);codecov()"'

pages:
  stage: deploy
  script:
    - $COMPOSE_CMD pull
    - $COMPOSE_CMD run api sh -c 'Rscript -e "install.packages("pkgdown"); devtools::document(); pkgdown::build_site(override = list(destination = 'public'))"; mv docs public/'
    - $COMPOSE_CMD push
  artifacts:
    paths:
      - public